<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--样式-->
    <Style x:Key="Title_Button" TargetType="{x:Type Button}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="45"></Setter>
        <Setter Property="Background" Value="{x:Null}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI Light"></Setter>
        <Setter Property="Command" Value="{Binding TitleButton_Click}"></Setter>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver"  Value="true">
                <Setter Property="Background" Value="#ec1825"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Title_Text" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10,0,0,0"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI Light"></Setter>
    </Style>
    <Style x:Key="List_Text" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="#333333"/>
    </Style>
    <Style x:Key="List_Title" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="DarkGray"/>
    </Style>
    <Style x:Key="Lits_Recangle" TargetType="{x:Type Rectangle}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="7"/>
    </Style>
    <Style x:Key="PlayControl_Recangle0" TargetType="{x:Type Rectangle}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="7"/>
    </Style>
    <Style x:Key="PlayControl_Recangle1" TargetType="{x:Type Rectangle}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="7"/>
    </Style>
    <Style x:Key="PlayControl_Recangle2" TargetType="{x:Type Rectangle}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
    </Style>
    <Style x:Key="List_Border" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderBrush" Value="{Binding Path=Background,ElementName=Root_Grid}"/>
    </Style>
    <Style x:Key="List_Button" TargetType="{x:Type Button}">
        <!--<EventSetter Event="Click" Handler="Button_Click"/>-->
        <Setter Property="Width" Value="190"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Command" Value="{Binding ListButton_Click}"/>
        <Setter Property="CommandParameter" Value="{Binding FuncKey}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Height="40" Name="border" Style="{StaticResource ResourceKey=List_Border}" BorderThickness="1">
                        <StackPanel Orientation="Horizontal" Width="190" >
                            <Rectangle Style="{StaticResource ResourceKey=Lits_Recangle}" Fill="{Binding ButtonContent_Img,Converter={StaticResource ResourceKey=IconSourceConverter}}"></Rectangle>
                            <TextBlock Text="{Binding ButtonContent_Text}" Style="{StaticResource ResourceKey=List_Text}"></TextBlock>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#E8E8EA"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#E8E8EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#C8C9CC"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#C8C9CC"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation  Storyboard.TargetProperty="Width" Duration="0:0:0.1"  To="187" AutoReverse="False" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation  Storyboard.TargetProperty="Width" Duration="0:0:0.5"  To="190" AutoReverse="False" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <!--模板-->
    <!--Thumb模板-->
    <ControlTemplate x:Key="ThumbTemplate" TargetType="{x:Type Thumb}">
        <Grid Width="8">
            <Border x:Name="Bg" CornerRadius="5" Margin="0"  SnapsToDevicePixels="True" Background="#ADAFB2" HorizontalAlignment="Stretch"/>
        </Grid>
        <ControlTemplate.Triggers>
            <!--增加故事版，鼠标离开3秒后消失-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#8A8A8A" TargetName="Bg"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--RepeatButton模板-->
    <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="{x:Type RepeatButton}">
        <Grid>
            <Border x:Name="Border" Margin="1" CornerRadius="2" BorderThickness="1" >
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0.0" />
                                <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource ControlLightColor}"/>
                                <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
        </Grid>
    </ControlTemplate>
    <!--滚动条模板-->
    <ControlTemplate x:Key="VerticalScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Grid Height="{TemplateBinding Height}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--内部背景-->
            <!--<Border Grid.Row="1" Margin="0" CornerRadius="5" SnapsToDevicePixels="True" Opacity="0.3" Background="SkyBlue"></Border>-->
            <!--中间滑动区域-->
            <Track IsDirectionReversed="True" Grid.Row="1">
                <!--上滑块-->
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" IsTabStop="False" Interval="50" Template="{StaticResource ResourceKey=RepeatButtonTemplate}"/>
                </Track.DecreaseRepeatButton>
                <!--中间滑块-->
                <Track.Thumb>
                    <Thumb Template="{StaticResource ThumbTemplate}"  Background="#C8C9CC" MinHeight="10" Margin="0"/>
                </Track.Thumb>
                <!--下滑块-->
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="HorizontalLargeIncrease" Command="ScrollBar.PageDownCommand" IsTabStop="False" Interval="50" Template="{StaticResource ResourceKey=RepeatButtonTemplate}"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>
    <!--ScrollView模板-->
    <ControlTemplate x:Key="ScrollViewTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid Background="{TemplateBinding Background}">
            <ScrollContentPresenter  
                        Grid.Row="0" Grid.Column="0" 
                        x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}"
                        CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}"
                        Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
                        />
            <!--垂直滚动条 -->
            <ScrollBar     
                        Grid.Row="0"  Grid.Column="1" HorizontalAlignment="Right"
                        x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar"
                        ViewportSize="{TemplateBinding ViewportHeight}"
                        Cursor="Arrow"  Maximum="{TemplateBinding ScrollableHeight}"
                        Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                        Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                <ScrollBar.Template>
                    <ControlTemplate>
                        <Grid Height="{TemplateBinding Height}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--内部背景-->
                            <!--<Border Grid.Row="1" Margin="0" CornerRadius="5" SnapsToDevicePixels="True" Opacity="0.3" Background="SkyBlue"></Border>-->
                            <!--中间滑动区域-->
                            <Track IsDirectionReversed="True" Grid.Row="1">
                                <!--上滑块-->
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageUpCommand" IsTabStop="False" Interval="50" Template="{StaticResource ResourceKey=RepeatButtonTemplate}"/>
                                </Track.DecreaseRepeatButton>
                                <!--中间滑块-->
                                <Track.Thumb>
                                    <Thumb Template="{StaticResource ThumbTemplate}"  Background="#C8C9CC" MinHeight="10" Margin="0" HorizontalAlignment="Right"/>
                                </Track.Thumb>
                                <!--下滑块-->
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="HorizontalLargeIncrease" Command="ScrollBar.PageDownCommand" IsTabStop="False" Interval="50" Template="{StaticResource ResourceKey=RepeatButtonTemplate}"/>
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </ScrollBar.Template>
            </ScrollBar>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>
